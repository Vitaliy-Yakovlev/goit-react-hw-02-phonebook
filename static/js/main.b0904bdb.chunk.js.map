{"version":3,"sources":["components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","index.js"],"names":["Form","state","name","number","hadleInputChange","e","currentTarget","value","setState","heandleSubmit","preventDefault","props","onSubmit","reset","this","onChange","type","pattern","title","required","Component","Contacts","contacts","onClick","map","id","Filter","onChangeFilter","Phponebook","filter","addContact","contact","shortid","generate","length","alert","resetInput","filterChange","filterContact","normalazedFilter","toLowerCase","includes","deleteContact","contactId","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.b0904bdb.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  hadleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  heandleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.heandleSubmit}>\n        <label>\n          Name\n          <input\n            value={name}\n            onChange={this.hadleInputChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n          <label>\n            Number\n            <input\n              value={number}\n              onChange={this.hadleInputChange}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </label>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Contacts = ({ contacts, onClick }) => {\n  return (\n    <ul>\n      {contacts.map(({ name, id, number }) => {\n        return (\n          <li key={id}>\n            {name}: {number}\n            <button type=\"button\" onClick={() => onClick(id)}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <label>\n      Find contact by name\n      <input type=\"text\" value={value} onChange={onChangeFilter} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\n\nclass Phponebook extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      name,\n      id: shortid.generate(),\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n\n    const errorName = this.state.contacts.filter(\n      contact => contact.name === name,\n    );\n    if (errorName.length) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n  };\n\n  resetInput = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  filterChange = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  filterContact = () => {\n    const { contacts, filter } = this.state;\n\n    const normalazedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalazedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n\n        <Filter value={filter} onChangeFilter={this.filterChange} />\n\n        <Contacts\n          contacts={this.filterContact()}\n          onClick={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default Phponebook;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}